{"ast":null,"code":"var _jsxFileName = \"/home/kenongwech/DocTalk-Webstack-project/Frontend/doctalk/src/Signup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// function SignUp() {\n//   const [formData, setFormData] = useState({\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//   });\n\n//   const [errorMessages, setErrorMessages] = useState({});\n//   const [isSubmitted, setIsSubmitted] = useState(false);\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     const { username, email, password, confirmPassword } = formData;\n\n//     if (!username || !email || !password || !confirmPassword) {\n//       setErrorMessages({ message: \"Please fill in all fields.\" });\n//     } else if (password !== confirmPassword) {\n//       setErrorMessages({ message: \"Passwords do not match.\" });\n//     } else {\n//       setIsSubmitted(true);\n//     }\n//   };\n\n//   const handleInputChange = (event) => {\n//     const { name, value } = event.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const renderErrorMessage = () => {\n//     return <div className=\"error\">{errorMessages.message}</div>;\n//   };\n\n//   const renderForm = (\n//     <form onSubmit={handleSubmit} className=\" p-6 bg-white rounded font-serif w-80 h-100vh\">\n//       <h2 className=\"text-lg font-semibold mb-4\">Sign Up</h2>\n//       <div className=\"input-container\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           name=\"username\"\n//           value={formData.username}\n//           onChange={handleInputChange}\n//           className=\"h-10 border border-gray-300 px-2\"\n//         />\n//       </div>\n//       <div className=\"input-container font-serif\">\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           name=\"email\"\n//           value={formData.email}\n//           onChange={handleInputChange}\n//           className=\"h-10 border border-gray-300 px-2\"\n//         />\n//       </div>\n//       <div className=\"input-container\">\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           name=\"password\"\n//           value={formData.password}\n//           onChange={handleInputChange}\n//           className=\"h-10 border border-gray-300 px-2\"\n//         />\n//       </div>\n//       <div className=\"input-container\">\n//         <input\n//           type=\"password\"\n//           placeholder=\"Confirm Password\"\n//           name=\"confirmPassword\"\n//           value={formData.confirmPassword}\n//           onChange={handleInputChange}\n//           className=\"h-10 border border-gray-300 px-2\"\n//         />\n//       </div>\n//       <button\n//         type=\"submit\"\n//         className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\"\n//       >\n//         Sign Up\n//       </button>\n//       {renderErrorMessage()}\n//     </form>\n//   );\n\n//   return (\n//     <div className=\"flex flex-col items-center justify-center w-full h-auto bg-gray-100\">\n//       {isSubmitted ? (\n//         <div>User is successfully signed up!</div>\n//       ) : (\n//         renderForm\n//       )}\n//     </div>\n//   );\n// }\n\n// export default SignUp;\n\nimport React, { useState } from 'react';\nimport Form from './Form'; // Import the Form component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  // Your existing SignUp component code...\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [email, setEmail] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      username,\n      email,\n      password,\n      confirmPassword\n    } = formData;\n    if (!username || !email || !password || !confirmPassword) {\n      setErrorMessages({\n        message: \"Please fill in all fields.\"\n      });\n    } else if (password !== confirmPassword) {\n      setErrorMessages({\n        message: \"Passwords do not match.\"\n      });\n    } else {\n      setIsSubmitted(true);\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const renderErrorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: errorMessages.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }, this);\n  };\n  const renderForm = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \" p-6 bg-white rounded font-serif w-80 h-100vh\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleInputChange,\n        className: \"h-10 border border-gray-300 px-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container font-serif\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleInputChange,\n        className: \"h-10 border border-gray-300 px-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleInputChange,\n        className: \"h-10 border border-gray-300 px-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        value: formData.confirmPassword,\n        onChange: handleInputChange,\n        className: \"h-10 border border-gray-300 px-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }, this), renderErrorMessage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center w-full h-auto bg-gray-100\",\n    children: isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User is successfully signed up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this) : ( /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), {/* Render the Form component */})\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"HIqtvUomnObJWQdrwn1rQFW21js=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Form","jsxDEV","_jsxDEV","SignUp","_s","formData","setFormData","username","email","password","confirmPassword","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","setEmail","handleSubmit","event","preventDefault","message","handleInputChange","name","value","target","renderErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderForm","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/kenongwech/DocTalk-Webstack-project/Frontend/doctalk/src/Signup.js"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// function SignUp() {\n//   const [formData, setFormData] = useState({\n//     username: \"\",\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//   });\n\n//   const [errorMessages, setErrorMessages] = useState({});\n//   const [isSubmitted, setIsSubmitted] = useState(false);\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     const { username, email, password, confirmPassword } = formData;\n\n//     if (!username || !email || !password || !confirmPassword) {\n//       setErrorMessages({ message: \"Please fill in all fields.\" });\n//     } else if (password !== confirmPassword) {\n//       setErrorMessages({ message: \"Passwords do not match.\" });\n//     } else {\n//       setIsSubmitted(true);\n//     }\n//   };\n\n//   const handleInputChange = (event) => {\n//     const { name, value } = event.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const renderErrorMessage = () => {\n//     return <div className=\"error\">{errorMessages.message}</div>;\n//   };\n\n//   const renderForm = (\n//     <form onSubmit={handleSubmit} className=\" p-6 bg-white rounded font-serif w-80 h-100vh\">\n//       <h2 className=\"text-lg font-semibold mb-4\">Sign Up</h2>\n//       <div className=\"input-container\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           name=\"username\"\n//           value={formData.username}\n//           onChange={handleInputChange}\n//           className=\"h-10 border border-gray-300 px-2\"\n//         />\n//       </div>\n//       <div className=\"input-container font-serif\">\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           name=\"email\"\n//           value={formData.email}\n//           onChange={handleInputChange}\n//           className=\"h-10 border border-gray-300 px-2\"\n//         />\n//       </div>\n//       <div className=\"input-container\">\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           name=\"password\"\n//           value={formData.password}\n//           onChange={handleInputChange}\n//           className=\"h-10 border border-gray-300 px-2\"\n//         />\n//       </div>\n//       <div className=\"input-container\">\n//         <input\n//           type=\"password\"\n//           placeholder=\"Confirm Password\"\n//           name=\"confirmPassword\"\n//           value={formData.confirmPassword}\n//           onChange={handleInputChange}\n//           className=\"h-10 border border-gray-300 px-2\"\n//         />\n//       </div>\n//       <button\n//         type=\"submit\"\n//         className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\"\n//       >\n//         Sign Up\n//       </button>\n//       {renderErrorMessage()}\n//     </form>\n//   );\n\n//   return (\n//     <div className=\"flex flex-col items-center justify-center w-full h-auto bg-gray-100\">\n//       {isSubmitted ? (\n//         <div>User is successfully signed up!</div>\n//       ) : (\n//         renderForm\n//       )}\n//     </div>\n//   );\n// }\n\n// export default SignUp;\n\nimport React, { useState } from 'react';\nimport Form from './Form'; // Import the Form component\n\nfunction SignUp() {\n  // Your existing SignUp component code...\n  const [formData, setFormData] = useState({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      });\n    \n      const [errorMessages, setErrorMessages] = useState({});\n      const [isSubmitted, setIsSubmitted] = useState(false);\n      const [email, setEmail] = useState('');\n    \n      const handleSubmit = (event) => {\n        event.preventDefault();\n    \n        const { username, email, password, confirmPassword } = formData;\n    \n        if (!username || !email || !password || !confirmPassword) {\n          setErrorMessages({ message: \"Please fill in all fields.\" });\n        } else if (password !== confirmPassword) {\n          setErrorMessages({ message: \"Passwords do not match.\" });\n        } else {\n          setIsSubmitted(true);\n        }\n      };\n    \n      const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setFormData({ ...formData, [name]: value });\n      };\n    \n      const renderErrorMessage = () => {\n        return <div className=\"error\">{errorMessages.message}</div>;\n      };\n    \n      const renderForm = (\n        <form onSubmit={handleSubmit} className=\" p-6 bg-white rounded font-serif w-80 h-100vh\">\n          <h2 className=\"text-lg font-semibold mb-4\">Sign Up</h2>\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              name=\"username\"\n              value={formData.username}\n              onChange={handleInputChange}\n              className=\"h-10 border border-gray-300 px-2\"\n            />\n          </div>\n          <div className=\"input-container font-serif\">\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n              className=\"h-10 border border-gray-300 px-2\"\n            />\n          </div>\n          <div className=\"input-container\">\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleInputChange}\n              className=\"h-10 border border-gray-300 px-2\"\n            />\n          </div>\n          <div className=\"input-container\">\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleInputChange}\n              className=\"h-10 border border-gray-300 px-2\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\"\n          >\n            Sign Up\n          </button>\n          {renderErrorMessage()}\n        </form>\n      );\n\n  return (\n    <div className=\"flex flex-col items-center justify-center w-full h-auto bg-gray-100\">\n      {isSubmitted ? (\n        <div>User is successfully signed up!</div>\n      ) : (\n        <Form />, {/* Render the Form component */}\n      )}\n    </div>\n  );\n}\n\nexport default SignUp;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}