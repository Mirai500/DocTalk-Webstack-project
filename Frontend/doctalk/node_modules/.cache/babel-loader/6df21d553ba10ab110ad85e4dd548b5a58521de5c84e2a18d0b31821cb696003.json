{"ast":null,"code":"var _jsxFileName = \"/home/kenongwech/DocTalk-Webstack-project/Frontend/doctalk/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Home from \"./home\";\nimport Login from './Login';\nimport Navbar from './Navbar';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [showSignup, setShowSignup] = useState(false);\n  const [signupData, setSignupData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  useEffect(() => {\n    // Fetch the user email and token from local storage\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    // If the token/email does not exist, mark the user as logged out\n    if (!user || !user.token) {\n      setLoggedIn(false);\n      return;\n    }\n\n    // If the token exists, verify it with the auth server to see if it is valid\n    fetch(\"http://localhost:3080/verify\", {\n      method: \"POST\",\n      headers: {\n        'jwt-token': user.token\n      }\n    }).then(r => r.json()).then(r => {\n      setLoggedIn('success' === r.message);\n      setEmail(user.email || \"\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        loggedIn: loggedIn,\n        email: email,\n        onLogout: () => setLoggedIn(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            email: email,\n            loggedIn: loggedIn,\n            setLoggedIn: setLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setLoggedIn: setLoggedIn,\n            setEmail: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VRHmHPzkCzn/hm7TluecetbtA84=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Route","Routes","Home","Login","Navbar","useEffect","useState","jsxDEV","_jsxDEV","App","_s","loggedIn","setLoggedIn","email","setEmail","showSignup","setShowSignup","signupData","setSignupData","username","password","confirmPassword","user","JSON","parse","localStorage","getItem","token","fetch","method","headers","then","r","json","message","className","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/kenongwech/DocTalk-Webstack-project/Frontend/doctalk/src/App.js"],"sourcesContent":["import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Home from \"./home\";\nimport Login from './Login';\nimport Navbar from './Navbar';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [showSignup, setShowSignup] = useState(false);\n    const [signupData, setSignupData] = useState({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n\n  useEffect(() => {\n    // Fetch the user email and token from local storage\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    // If the token/email does not exist, mark the user as logged out\n    if (!user || !user.token) {\n      setLoggedIn(false);\n      return;\n    }\n\n    // If the token exists, verify it with the auth server to see if it is valid\n    fetch(\"http://localhost:3080/verify\", {\n      method: \"POST\",\n      headers: {\n        'jwt-token': user.token\n      }\n    })\n      .then(r => r.json())\n      .then(r => {\n        setLoggedIn('success' === r.message);\n        setEmail(user.email || \"\");\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Navbar loggedIn={loggedIn} email={email} onLogout={() => setLoggedIn(false)} /> {/* Render the Navbar component */}\n        <Routes>\n          <Route path=\"/\" element={<Home email={email} loggedIn={loggedIn} setLoggedIn={setLoggedIn} />} />\n          <Route path=\"/login\" element={<Login setLoggedIn={setLoggedIn} setEmail={setEmail} />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}